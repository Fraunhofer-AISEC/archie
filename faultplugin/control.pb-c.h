/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: control.proto */

#ifndef PROTOBUF_C_control_2eproto__INCLUDED
#define PROTOBUF_C_control_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Archie__Config Archie__Config;
typedef struct Archie__End Archie__End;
typedef struct Archie__MemoryRegion Archie__MemoryRegion;


/* --- enums --- */


/* --- messages --- */

struct  Archie__Config
{
  ProtobufCMessage base;
  int64_t max_duration;
  int64_t num_faults;
  protobuf_c_boolean tb_exec_list;
  protobuf_c_boolean tb_info;
  protobuf_c_boolean mem_info;
  uint64_t start_address;
  uint64_t start_counter;
  size_t n_end_list;
  Archie__End **end_list;
  protobuf_c_boolean tb_exec_list_ring_buffer;
  int64_t num_memregions;
  size_t n_memorydump;
  Archie__MemoryRegion **memorydump;
  protobuf_c_boolean exists_tb_exec_list;
  protobuf_c_boolean exists_tb_info;
  protobuf_c_boolean exists_start;
  protobuf_c_boolean exists_end;
  protobuf_c_boolean exists_memory_dump;
  protobuf_c_boolean exists_ring_buffer;
};
#define ARCHIE__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&archie__config__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0 }


struct  Archie__End
{
  ProtobufCMessage base;
  uint64_t address;
  uint64_t counter;
};
#define ARCHIE__END__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&archie__end__descriptor) \
    , 0, 0 }


struct  Archie__MemoryRegion
{
  ProtobufCMessage base;
  uint64_t address;
  uint64_t length;
};
#define ARCHIE__MEMORY__REGION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&archie__memory__region__descriptor) \
    , 0, 0 }


/* Archie__Config methods */
void   archie__config__init
                     (Archie__Config         *message);
size_t archie__config__get_packed_size
                     (const Archie__Config   *message);
size_t archie__config__pack
                     (const Archie__Config   *message,
                      uint8_t             *out);
size_t archie__config__pack_to_buffer
                     (const Archie__Config   *message,
                      ProtobufCBuffer     *buffer);
Archie__Config *
       archie__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   archie__config__free_unpacked
                     (Archie__Config *message,
                      ProtobufCAllocator *allocator);
/* Archie__End methods */
void   archie__end__init
                     (Archie__End         *message);
size_t archie__end__get_packed_size
                     (const Archie__End   *message);
size_t archie__end__pack
                     (const Archie__End   *message,
                      uint8_t             *out);
size_t archie__end__pack_to_buffer
                     (const Archie__End   *message,
                      ProtobufCBuffer     *buffer);
Archie__End *
       archie__end__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   archie__end__free_unpacked
                     (Archie__End *message,
                      ProtobufCAllocator *allocator);
/* Archie__MemoryRegion methods */
void   archie__memory__region__init
                     (Archie__MemoryRegion         *message);
size_t archie__memory__region__get_packed_size
                     (const Archie__MemoryRegion   *message);
size_t archie__memory__region__pack
                     (const Archie__MemoryRegion   *message,
                      uint8_t             *out);
size_t archie__memory__region__pack_to_buffer
                     (const Archie__MemoryRegion   *message,
                      ProtobufCBuffer     *buffer);
Archie__MemoryRegion *
       archie__memory__region__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   archie__memory__region__free_unpacked
                     (Archie__MemoryRegion *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Archie__Config_Closure)
                 (const Archie__Config *message,
                  void *closure_data);
typedef void (*Archie__End_Closure)
                 (const Archie__End *message,
                  void *closure_data);
typedef void (*Archie__MemoryRegion_Closure)
                 (const Archie__MemoryRegion *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor archie__config__descriptor;
extern const ProtobufCMessageDescriptor archie__end__descriptor;
extern const ProtobufCMessageDescriptor archie__memory__region__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_control_2eproto__INCLUDED */
