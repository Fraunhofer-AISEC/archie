name: build

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Test Build
    runs-on: ubuntu-latest

    steps:
    - name: Clone Repository
      uses: actions/checkout@v4

    - name: install packages
      run: |
        sudo apt update
        sudo apt install -y build-essential ninja-build libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev libprotobuf-c-dev protobuf-compiler protobuf-c-compiler libcap-dev
        pip install -r requirements.txt

    - name: Checkout submodules
      run: git submodule update --init

    - name: Build QEMU
      run: mkdir -p qemu/build/debug; cd qemu/build/debug;  ./../../configure --target-list=arm-softmmu,riscv64-softmmu --enable-debug --enable-plugins --disable-sdl --disable-gtk --disable-curses --disable-vnc; make -j $(nproc --all); echo "done"

    - name: Build Faultplugin
      run: cd faultplugin; make -j; echo "done"

    - name: Run ARCHIE
      run: cd examples/stm32; ./run.sh; cd ../riscv64; ./run.sh; cd ../stm32-timeout-wfi; ./run.sh

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          examples/riscv64/*.txt
          examples/riscv64/*.hdf5
          examples/stm32/*.txt
          examples/stm32/*.hdf5
          examples/stm32-timeout-wfi/*.txt
          examples/stm32-timeout-wfi/*.hdf5

  build_with_script:
    name: Test build.sh Script
    runs-on: ubuntu-latest

    steps:
    - name: Clone Repository
      uses: actions/checkout@v4

    - name: test bash build script
      run: |
        (cat <<END
        1
        y
        1
        2
        y
        1
        END
        ) | bash build.sh

  verify_stm32:
    name: Verify results of stm32 experiment
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path : .

      - name: Verify stm32 results
        run: |
          cat stm32/log_-2.txt | grep -A8 800006a | tail -8 | grep 'Reached end point'
          cat stm32/log_-1.txt | grep -A8 8000056 | tail -8 | grep 'Reached end point'
          cat stm32/log_0.txt | grep -A8 8000070 | tail -8 | grep 'Reached end point'
          cat stm32/log_1.txt | grep -A8 8000070 | tail -8 | grep 'Reached end point'
          cat stm32/log_2.txt | grep -A8 8000070 | tail -8 | grep 'Reached end point'

  verify_stm32-timeout-wfi:
    name: Verify results of stm32-timeout-wfi experiment
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path : .

      - name: Verify stm32-timeout-wfi results
        run: |
          cat stm32-timeout-wfi/log_-2.txt | grep -A8 800006a | tail -8 | grep 'Reached end point'
          cat stm32-timeout-wfi/log_-1.txt | grep -A8 8000056 | tail -8 | grep 'Reached end point'
          cat stm32-timeout-wfi/log.txt | grep 'Experiment 0 ran into timeout'
          cat stm32-timeout-wfi/log.txt | grep 'Experiment 1 ran into timeout'
          cat stm32-timeout-wfi/log.txt | grep 'Experiment 2 ran into timeout'

  verify_riscv64:
    name: Verify results of riscv64 experiment
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path : .

      - name: Verify riscv64 results
        run: |
          cat riscv64/log_-2.txt | grep -A8 80000014 | tail -8 | grep 'Reached end point'
          cat riscv64/log_-1.txt | grep -A8 8000002a | tail -8 | grep 'Reached end point'
          cat riscv64/log_0.txt | grep -A8 8000003c| tail -8 | grep 'Reached end point'
          cat riscv64/log_1.txt | grep -A8 8000003c | tail -8 | grep 'Reached end point'
          cat riscv64/log_2.txt | grep -A8 8000003c | tail -8 | grep 'Reached end point'
